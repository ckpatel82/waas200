{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Deployment location"
            }
        },
        "osDiskVhdUri": {
            "type": "string",
            "metadata": {
            "description": "Uri of the existing VHD"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "WAAS_Network",
            "metadata": {
                "description": "VNet name"
            }
        },
        "virtualNetworkExistingRGName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Identifies whether to use new or existing Storage Account"
            }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Virtual Network Address prefix"
            }
        },
        "vnetNewOrExisting" : {
            "type" : "string",
            "defaultValue" : "",
            "metadata": {
                "description": "Identifies whether to use new or existing Virtual Network"
            }
        },
        "Subnet1Prefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Subnet 1 Prefix"
            }
        },
        "Subnet1Name": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Subnet 1 Name"
            }
        },
        "subnet1StartAddress" : {
            "type" : "string",
            "metadata" : {
                "description" : "Subnet 1 Starting IP Address"
            }
        },
        "Subnet2Prefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Subnet 2 Prefix"
            }
        },
        "Subnet2Name": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Subnet 2 Name"
            }
        },
        "subnet2StartAddress" : {
            "type" : "string",
            "metadata" : {
                "description" : "Subnet 2 Starting IP Address"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue" : "",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH Key for the virtual machines"
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Authentication Type to chose for the Virtual Machines"
            }
        },
        "customData": {
           "type": "string",
           "defaultValue": "CentralManagerIPAddress",
           "metadata": {
           "description": "String passed down to the Virtual Machine."
           }
       },
        "vmName": {
            "type": "string",
            "defaultValue": "WAAS200",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "newStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Unique Name for Storage Account where the Virtual Machine's disks will be placed."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS"
            ],
            "metadata": {
                "description": "The type of storage account created."
            }
        },
        "storageAccountNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Identifies whether to use new or existing Storage Account"
            }
        },
        "storageAccountExistingRG": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource Group containing existing storage account"
            }
        },
        "publicIPAddressName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the Public IP Address"
            }
        },
        "publicIPDnsName": {
            "type": "string",
            "defaultValue": "WAASdns",
            "metadata": {
                "description": "Unique DNS Prefix for the Public IP used to access the Virtual Machine."
            }
        },
        "publicIPNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Indicates whether the Public IP is new or existing"
            }
        },
        "publicIPExistingRGName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource Group containing existing public IP"
            }
        },
        "baseUrl": {
            "type": "string",
            "defaultValue": "https://github.com/ckpatel82/waas200/raw/master",
            "metadata": {
                "artifactsBaseUrl": "",
                "description": "URL to acquire other templates"
            }
        },
        "vmSize" : {
            "type" : "string",
            "defaultValue" : "Standard_D3_v2",
            "allowedValues" : [
                "Standard_D3_v2"
            ],
            "metadata" : {
                "description" : "Size of the Virtual Machine"
            }
        },
        "sizeOfDataDiskInGB": {
            "type": "string",
            "defaultValue" : "160",
            "metadata": {
            "description": "Size of each data disk in GB"
            }
        }
    },
    "variables": {
    	"osType": "Linux",
        "imagePublisher": "cisco",
        "imageOffer": "cisco-waas",
        "imageSKU": "waas-200-byol",
        "OSDiskName": "[concat(parameters('vmName'),'-disk')]",
        "osDiskVhdName": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('vmName'),'osDisk.vhd')]",
        "dataDiskVhdName": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('vmName'),'dataDisk.vhd')]",
        "vmStorageAccountContainerName": "vhds",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet2Name'))]",
        "nsgname": "[concat(parameters('vmName'),'-SSH-SecurityGroup')]",
        "apiVer": "2015-06-15",
        "publicIPAddressType": "Dynamic",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "storageAccountSetupURL": "[concat(parameters('baseUrl'),'/storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
        "publicIPSetupURL": "[concat(parameters('baseUrl'),'/publicip-',parameters('publicIPNewOrExisting'),'.json')]",
        "virtualNetworkSetupURL": "[concat(parameters('baseUrl'),'/vnet-',parameters('vnetNewOrExisting'),'.json')]",
        "osProfile": "[variables(concat('osprofile',parameters('authenticationType')))]",
        "osProfilesshPublicKey": {
            "computername": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "customData": "[base64(parameters('customData'))]",
            "linuxConfiguration": {
                "disablePasswordAuthentication": "true",
                "ssh": {
                    "publicKeys": [
                        {
                            "path": "[variables('sshKeyPath')]",
                            "keyData": "[parameters('sshPublicKey')]"
                        }
                    ]
                }
            }
        },
        "osProfilepassword": {
            "computername": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "customData": "[base64(parameters('customData'))]"
        }
    },
    "resources": [
        {
            "name": "SettingUpStorageAccount",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageAccountSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "storageAccountType": {
                        "value": "[parameters('storageAccountType')]"
                    },
                    "storageAccountName": {
                        "value": "[parameters('newStorageAccountName')]"
                    },
                    "storageAccountExistingRG": {
                        "value": "[parameters('storageAccountExistingRG')]"
                    }
                }
            }
          },
        {
          "apiVersion": "[variables('apiVer')]",
          "type": "Microsoft.Network/publicIPAddresses",
          "name": "[parameters('publicIPAddressName')]",
          "location": "[parameters('location')]",
          "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsRecord": {
                      "fqdn": "[parameters('publicIPDnsName')]"
                }
          }
        },
        {
            "name": "SettingUpPublicIP",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('publicIPSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "publicIPAddressName": {
                        "value": "[parameters('publicIPAddressName')]"
                    },
                    "publicIPAddressType": {
                        "value": "[variables('publicIPAddressType')]"
                    },
                    "publicIPNewOrExisting": {
                        "value": "[parameters('publicIPNewOrExisting')]"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('publicIPDnsName')]"
                    },
                    "publicIpRGName" : {
                        "value" : "[parameters('publicIPExistingRGName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(parameters('vmName'),'-SSH-SecurityGroup')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-Rule",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "SettingUpVirtualNetwork",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('virtualNetworkSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "virtualNetworkAddressPrefix": {
                        "value": "[parameters('virtualNetworkAddressPrefix')]"
                    },
                    "Subnet1Name": {
                        "value": "[parameters('Subnet1Name')]"
                    },
                    "Subnet1Prefix": {
                        "value": "[parameters('Subnet1Prefix')]"
                    },
                    "Subnet2Name": {
                        "value": "[parameters('Subnet2Name')]"
                    },
                    "Subnet2Prefix": {
                        "value": "[parameters('Subnet2Prefix')]"
                    },
                    "vnetExistingRGName": {
                        "value": "[parameters('virtualNetworkExistingRGName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmName'),'-Nic0')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgname'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress" : "[parameters('subnet1StartAddress')]",
                            "subnet": {
                                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2015-01-01').outputs.subnet1Ref.value]"
                            },
                            "publicIPAddress":{
                            	"id": "[reference('Microsoft.Resources/deployments/SettingUpPublicIp', '2015-01-01').outputs.publicIpId.value]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
                },
                "enableIPForwarding": true
              }
        },
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmName'),'-Nic1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress" : "[parameters('subnet2StartAddress')]",
                            "subnet": {
                                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2015-01-01').outputs.subnet2Ref.value]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpStorageAccount')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic0')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic1')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": "[variables('osProfile')]",
                "storageProfile": {
                    "dataDisks": [
	                {
                        "name": "dataDisk",
                        "diskSizeGB": "[parameters('sizeOfDataDiskInGB')]",
                        "lun": 0,
                        "vhd": {
                            "Uri": "[variables('dataDiskVhdName')]"
                        },
                        "createOption": "Empty"
	                }
	                ],
                    "osDisk": {
                        "name": "[concat(parameters('vmName'),'-osDisk')]",
                        "osType": "[variables('osType')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "image": {
                            "uri": "[parameters('osDiskVhdUri')]"
                        },
                        "vhd": {
                        "uri": "[variables('osDiskVhdName')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic0'))]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic1'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]"
                    }
                }
            }
        }
    ]
}
